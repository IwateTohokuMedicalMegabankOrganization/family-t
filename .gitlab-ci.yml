stages:
  - test
  - analysis
  - deploy

# test
ut:
  stage: test
  tags: 
    - review_deploy
  script:
    - export http_proxy=
    - export https_proxy=
    - npm config set proxy 
    - npm config set http-proxy 
    - npm config set https-proxy 
    - mkdir -p node_modules
    - npm install
    - npm run test -- --coverage
  allow_failure: true
  artifacts:
    paths:
    - __tests__/__coverage__/

## review
deploy_for_review:
  stage: test
  tags: 
    - review_deploy
  script:
    - echo "update family-t mss demo server contents"
    - export http_proxy=
    - export https_proxy=
    - npm config set proxy 
    - npm config set http-proxy 
    - npm config set https-proxy 
    - mkdir -p node_modules
    - npm install
    - npm run dev
    - mkdir -p /var/www/html/$CI_COMMIT_REF_SLUG
    - cp -rf ./* /var/www/html/$CI_COMMIT_REF_SLUG/
    - echo "Deploy a review app"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://family-t.tkb.mss.co.jp/$CI_COMMIT_REF_SLUG/
  only:
    - branches
  except:
    - master
    
# release
deploy:
  stage: deploy
  tags: 
    - review_deploy
  script:
    - echo "update family-t demo server contents"
  only:
    - develop

# SonarQube analysis
SonarQube:
  stage: analysis
  tags: 
    - review_deploy
  variables:
    SONAR_HOST_URL: http://sonarqube.tkb.mss.co.jp/
    SONAR_TOKEN: ${SONARQUBE_TOKEN}
    SONAR_PROJECT_BASE_DIR: ${CI_PROJECT_DIR}
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    SONAR_EXCLUSIONS: "*.js, __tests__/**, jquery/**, node_modules/**, js/**"
    SOURCE_ENCODING: UTF-8
    LCOV_INFO: "__tests__/__coverage__/lcov.info"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=family-t -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.sourceEncoding=${SOURCE_ENCODING} -Dsonar.javascript.lcov.reportPaths=${LCOV_INFO} -Dsonar.exclusions="${SONAR_EXCLUSIONS}"
  allow_failure: true
  only:
    - branches
    # - develop
